pipeline {
    agent any

    environment {
        SLACK_CHANNEL = '#abdulhakim_ip1'
        SLACK_WEBHOOK_URL = 'https://hooks.slack.com/services/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'
        RENDER_DEPLOY_URL = 'https://rajab@heroku.com'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code from version control (e.g., Git)
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Install dependencies (if needed)
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                // Execute your tests (replace with your test command)
                sh 'npm test'

                // Post-build actions
                post {
                    failure {
                        // Send an email notification if tests fail
                        emailext(
                            subject: "Test Failed: ${currentBuild.fullDisplayName}",
                            body: "Test failed for ${currentBuild.fullDisplayName}. Please investigate.",
                            to: 'your-email@example.com',
                            replyTo: 'your-email@example.com',
                            mimeType: 'text/plain',
                            recipientProviders: [[$class: 'CulpritsRecipientProvider']]
                        )
                    }
                }
            }
        }
        stage('Deploy') {
                    steps {

                        sh 'export RENDER_DEPLOY_URL=https://rajab@heroku.com'
                    }
                }


    }

    post {
        success {

            slackSend(
                            color: 'good',  // Message color (green for success)
                            channel: env.SLACK_CHANNEL,
                            message: "Deployment successful for ${currentBuild.fullDisplayName}\n" +
                                     "Build ID: ${BUILD_NUMBER}\n" +
                                     "Render Deployment URL: ${env.RENDER_DEPLOY_URL}",
                tokenCredentialId: 'a52IuBLZnPdv44vHagfcHn8t'
            )
        }

    }
}
